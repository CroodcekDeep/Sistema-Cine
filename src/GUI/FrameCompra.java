/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import Products.*;
import Products.bebida.*;
import Products.snack.*;
import Products.extra.*;
import Registro.DetalleOrden;
import java.awt.Dimension;
import java.awt.Image;
import java.util.ArrayList;
import javax.swing.ComboBoxModel;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JInternalFrame;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author danie
 */
public class FrameCompra extends javax.swing.JInternalFrame {

    // Variable del precio total de la orden
    Double precioFinal = 0.0;

    // Variable que guarda el precio de cada producto de la orden
    Double precio;

    static Principal principal;

    ImageIcon imgProducto;
    DefaultTableModel tableProductos = new DefaultTableModel();

    public FrameCompra() {
        initComponents();
        this.setTitle("Cinema");
        ImageIcon imagenFondo = new ImageIcon("src\\img\\SistemaFondo_1.jpg");
        setModel();
        lblValor.setText("");
    }

    public FrameCompra(Principal principal) {
        this.principal = principal;
        initComponents();
        setModel();

        //Esconder Variables
        cmbDescripcion.setVisible(false);
        cmbTamanio.setVisible(false);
        lblDescripcion.setVisible(false);
        lblTamanio.setVisible(false);
        cmbTipoBebida.setVisible(false);
        lblTipoBebida.setVisible(false);
        lblCantidad.setVisible(false);
        lblNumeroCantidad.setVisible(false);
        btnCantidadMas.setVisible(false);
        btnCantidadMenos.setVisible(false);
        lblValor.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLImagenProducto = new javax.swing.JLabel();
        lblTituloCompra = new javax.swing.JLabel();
        lblTipoProducto = new javax.swing.JLabel();
        lblTamanio = new javax.swing.JLabel();
        lblCantidad = new javax.swing.JLabel();
        btnGenerarFactura = new javax.swing.JButton();
        cmbProducto = new javax.swing.JComboBox<String>();
        cmbTamanio = new javax.swing.JComboBox<String>();
        lblNumeroCantidad = new javax.swing.JLabel();
        btnCantidadMas = new javax.swing.JButton();
        btnCantidadMenos = new javax.swing.JButton();
        btnAnadirProducto = new javax.swing.JButton();
        lblDescripcion = new javax.swing.JLabel();
        cmbDescripcion = new javax.swing.JComboBox();
        lblTipoBebida = new javax.swing.JLabel();
        cmbTipoBebida = new javax.swing.JComboBox<String>();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableTotal = new javax.swing.JTable();
        lblValor = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLImagenProducto.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/bill.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLImagenProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLImagenProducto, javax.swing.GroupLayout.DEFAULT_SIZE, 101, Short.MAX_VALUE)
        );

        lblTituloCompra.setFont(new java.awt.Font("Calibri Light", 1, 18)); // NOI18N
        lblTituloCompra.setText("COMPRA");

        lblTipoProducto.setText("Tipo de Producto");

        lblTamanio.setText("Tamaño");

        lblCantidad.setText("Cantidad");

        btnGenerarFactura.setText("Generar Factura");
        btnGenerarFactura.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnGenerarFactura.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGenerarFacturaActionPerformed(evt);
            }
        });

        cmbProducto.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Canguil", "Nacho", "HotDog", "Bebida" }));
        cmbProducto.setSelectedIndex(-1);
        cmbProducto.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmbProducto.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbProductoItemStateChanged(evt);
            }
        });

        cmbTamanio.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmbTamanio.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTamanioItemStateChanged(evt);
            }
        });

        lblNumeroCantidad.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        lblNumeroCantidad.setText("0");
        lblNumeroCantidad.setToolTipText("");

        btnCantidadMas.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCantidadMas.setText("+");
        btnCantidadMas.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCantidadMas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCantidadMasActionPerformed(evt);
            }
        });

        btnCantidadMenos.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        btnCantidadMenos.setText("-");
        btnCantidadMenos.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnCantidadMenos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCantidadMenosActionPerformed(evt);
            }
        });

        btnAnadirProducto.setText("Añadir al carrito");
        btnAnadirProducto.setEnabled(false);
        btnAnadirProducto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAnadirProductoActionPerformed(evt);
            }
        });

        lblDescripcion.setText("Descripcion");
        lblDescripcion.setToolTipText("");

        cmbDescripcion.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        lblTipoBebida.setText("Tipo de Bebida");

        cmbTipoBebida.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Vaso", "Botella" }));
        cmbTipoBebida.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        cmbTipoBebida.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbTipoBebidaItemStateChanged(evt);
            }
        });

        jTableTotal.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(jTableTotal);

        lblValor.setText("jLabel1");

        jLabel1.setText("Valor Total");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 529, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 86, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnAnadirProducto)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnGenerarFactura))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTipoBebida)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(cmbTipoBebida, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTamanio)
                                            .addComponent(lblTipoProducto)
                                            .addComponent(lblCantidad)
                                            .addComponent(lblDescripcion))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 96, Short.MAX_VALUE)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(lblTituloCompra)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                                    .addComponent(cmbDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                                        .addComponent(btnCantidadMenos, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(40, 40, 40)
                                                        .addComponent(lblNumeroCantidad, javax.swing.GroupLayout.PREFERRED_SIZE, 11, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                        .addComponent(btnCantidadMas, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addComponent(cmbTamanio, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(cmbProducto, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(18, 18, 18)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(48, 48, 48))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(45, 45, 45)
                .addComponent(lblValor)
                .addGap(79, 79, 79))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addComponent(lblTituloCompra)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(71, 71, 71))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTipoProducto)
                            .addComponent(cmbProducto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTamanio)
                            .addComponent(cmbTamanio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblDescripcion)
                            .addComponent(cmbDescripcion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblTipoBebida)
                                    .addComponent(cmbTipoBebida, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addComponent(lblCantidad))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(lblNumeroCantidad)
                                .addComponent(btnCantidadMenos)
                                .addComponent(btnCantidadMas)))
                        .addGap(18, 18, 18)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnGenerarFactura)
                    .addComponent(btnAnadirProducto))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblValor)
                    .addComponent(jLabel1))
                .addContainerGap(15, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCantidadMasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCantidadMasActionPerformed
        int nuevaCantidad = Integer.parseInt(lblNumeroCantidad.getText()) + 1;
        lblNumeroCantidad.setText(String.valueOf(nuevaCantidad));
    }//GEN-LAST:event_btnCantidadMasActionPerformed

    private void cmbProductoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbProductoItemStateChanged
        if (cmbProducto.getSelectedIndex() != -1) {
            //Combobox Tamanio
            ComboBoxModel<String> tamanioNachos = new DefaultComboBoxModel((new String[]{
                "Normal", "Grande"}));
            ComboBoxModel<String> tamanioCanguil = new DefaultComboBoxModel((new String[]{
                "Normal", "Grande", "Pequeño"}));
            ComboBoxModel<String> tamanioHotDog = new DefaultComboBoxModel((new String[]{
                "Normal"}));
            ComboBoxModel<String> tamanioBebida = new DefaultComboBoxModel((new String[]{
                "Normal", "Grande"}));

            //Combobox Extras
            ComboBoxModel<String> descripcionGeneral = new DefaultComboBoxModel((new String[]{
                "Sin Extra", "Chile", "Carne Molida"}));
            ComboBoxModel<String> descripcionBebida = new DefaultComboBoxModel((new String[]{
                "Coca-Cola", "Sprite", "Fanta"}));

            String opcionProducto = cmbProducto.getSelectedItem().toString();

            cmbTamanio.setSelectedIndex(-1);

            if (opcionProducto.equals("Canguil")) {
                cmbTamanio.setModel(tamanioCanguil);
                cmbTamanio.setVisible(true);
                cmbTamanio.setSelectedIndex(0);
                lblTamanio.setVisible(true);
                cmbDescripcion.setModel(descripcionGeneral);
                cmbDescripcion.setVisible(false);
                lblDescripcion.setVisible(false);
                cmbTipoBebida.setVisible(false);
                lblTipoBebida.setVisible(false);
                lblCantidad.setVisible(true);
                lblNumeroCantidad.setVisible(true);
                btnCantidadMas.setVisible(true);
                btnCantidadMenos.setVisible(true);
                btnAnadirProducto.setEnabled(true);
                this.imgProducto = new ImageIcon(getClass().getResource("/img/popcorn.jpg"));
                //this.imgProducto = new ImageIcon("src\\img\\popcorn.jpg");
                jLImagenProducto.setIcon(new ImageIcon(imgProducto.getImage().getScaledInstance(jLImagenProducto.getWidth(), jLImagenProducto.getHeight(), Image.SCALE_SMOOTH)));

            } else if (opcionProducto.equals("Nacho")) {
                cmbTamanio.setModel(tamanioNachos);
                cmbTamanio.setVisible(true);
                cmbTamanio.setSelectedIndex(0);
                lblTamanio.setVisible(true);
                cmbDescripcion.setModel(descripcionGeneral);
                cmbDescripcion.setVisible(true);
                cmbDescripcion.setSelectedIndex(0);
                lblDescripcion.setVisible(true);
                cmbTipoBebida.setVisible(false);
                lblTipoBebida.setVisible(false);
                lblCantidad.setVisible(true);
                lblNumeroCantidad.setVisible(true);
                btnCantidadMas.setVisible(true);
                btnCantidadMenos.setVisible(true);
                btnAnadirProducto.setEnabled(true);
                this.imgProducto = new ImageIcon(getClass().getResource("/img/nachos.jpg"));
                //this.imgProducto = new ImageIcon("src\\img\\nachos.jpg");
                jLImagenProducto.setIcon(new ImageIcon(imgProducto.getImage().getScaledInstance(jLImagenProducto.getWidth(), jLImagenProducto.getHeight(), Image.SCALE_SMOOTH)));

            } else if (opcionProducto.equals("HotDog")) {
                cmbTamanio.setModel(tamanioHotDog);
                cmbTamanio.setVisible(false);
                cmbTamanio.setSelectedIndex(0);
                lblTamanio.setVisible(false);
                cmbDescripcion.setModel(descripcionGeneral);
                cmbDescripcion.setVisible(true);
                cmbDescripcion.setSelectedIndex(0);
                lblDescripcion.setVisible(true);
                cmbTipoBebida.setVisible(false);
                lblTipoBebida.setVisible(false);
                lblCantidad.setVisible(true);
                lblNumeroCantidad.setVisible(true);
                btnCantidadMas.setVisible(true);
                btnCantidadMenos.setVisible(true);
                btnAnadirProducto.setEnabled(true);
                this.imgProducto = new ImageIcon(getClass().getResource("/img/hotdog.jpg"));
                //this.imgProducto = new ImageIcon("src\\img\\hotdog.jpg");
                jLImagenProducto.setIcon(new ImageIcon(imgProducto.getImage().getScaledInstance(jLImagenProducto.getWidth(), jLImagenProducto.getHeight(), Image.SCALE_SMOOTH)));

            } else if (opcionProducto.equals("Bebida")) {
                cmbTamanio.setModel(tamanioBebida);
                cmbTamanio.setVisible(true);
                cmbTamanio.setSelectedIndex(0);
                lblTamanio.setVisible(true);
                cmbDescripcion.setModel(descripcionBebida);
                cmbDescripcion.setVisible(true);
                cmbDescripcion.setSelectedIndex(0);
                lblDescripcion.setVisible(true);
                cmbTipoBebida.setVisible(true);
                cmbTipoBebida.setSelectedIndex(0);
                lblTipoBebida.setVisible(true);
                lblCantidad.setVisible(true);
                lblNumeroCantidad.setVisible(true);
                btnCantidadMas.setVisible(true);
                btnCantidadMenos.setVisible(true);
                btnAnadirProducto.setEnabled(true);
                this.imgProducto = new ImageIcon(getClass().getResource("/img/cocacolaaCine.jpg"));
                //this.imgProducto = new ImageIcon("src\\img\\cocacolaaCine.jpg");
                jLImagenProducto.setIcon(new ImageIcon(imgProducto.getImage().getScaledInstance(jLImagenProducto.getWidth(), jLImagenProducto.getHeight(), Image.SCALE_SMOOTH)));
            }
        }
    }//GEN-LAST:event_cmbProductoItemStateChanged

    private void cmbTamanioItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTamanioItemStateChanged
        if (cmbTamanio.isEnabled()) {
            btnCantidadMas.setEnabled(true);
            btnCantidadMenos.setEnabled(true);
        } else {
            btnCantidadMas.setEnabled(false);
            btnCantidadMenos.setEnabled(false);
        }
    }//GEN-LAST:event_cmbTamanioItemStateChanged

    private void btnAnadirProductoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAnadirProductoActionPerformed
        if (Integer.parseInt(lblNumeroCantidad.getText()) != 0) {
            String producto = cmbProducto.getSelectedItem().toString();
            String tamanio = cmbTamanio.getSelectedItem().toString();
            String extra = cmbDescripcion.getSelectedItem().toString();

            Producto prodLista;
            String extraTexto = "";
            precio = 0.0;
            if (producto.equals("Canguil")) {
                prodLista = new Canguil(tamanio);
                precio = prodLista.getPrecio();
            } else if (producto.equals("Bebida")) {
                String tipoBebida = cmbTipoBebida.getSelectedItem().toString();
                if (tipoBebida.equals("Vaso")) {
                    prodLista = new Vaso(tamanio, extra);
                    extraTexto = " - " + extra;
                } else {
                    prodLista = new Botella(extra);
                    extraTexto = " - " + extra;
                }
                precio = prodLista.getPrecio();
            } else {
                Snack snack;
                if (producto.equals("Nacho")) {
                    snack = new Nacho(tamanio);
                } else {
                    snack = new HotDog();
                }

                if (cmbDescripcion.getSelectedIndex() != 0) {
                    if (extra.equals("Chile")) {
                        prodLista = new Chile(snack);
                        precio = prodLista.getPrecio();
                        extraTexto = "con Chile";
                    } else {
                        prodLista = new CarneMolida(snack);
                        precio = prodLista.getPrecio();
                        extraTexto = "con Carne Molida";
                    }
                } else {
                    prodLista = snack;
                    precio = prodLista.getPrecio();
                }
            }

            setDatos(prodLista, extraTexto);
            
            if (!btnGenerarFactura.isEnabled())
                btnGenerarFactura.setEnabled(true);
            
        } else {
            JOptionPane.showMessageDialog(rootPane, "No se puede agregar"
                    + " el producto\nPor favor, ingrese una cantidad válida",
                    "Error", WIDTH, frameIcon);
        }

        lblNumeroCantidad.setText(String.valueOf(0));
        lblValor.setVisible(true);
        lblValor.setText("$ " + String.format("%.2f", precioFinal));
    }//GEN-LAST:event_btnAnadirProductoActionPerformed

    private void btnCantidadMenosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCantidadMenosActionPerformed
        int nuevaCantidad = Integer.parseInt(lblNumeroCantidad.getText()) - 1;
        if (nuevaCantidad < 0) {
            lblNumeroCantidad.setText(String.valueOf(0));
        } else {
            lblNumeroCantidad.setText(String.valueOf(nuevaCantidad));
        }
    }//GEN-LAST:event_btnCantidadMenosActionPerformed

    private void btnGenerarFacturaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGenerarFacturaActionPerformed
        principal.ordenActual.setDetallesOrden(principal.detallesOrden);
        
        principal.centrarVentana(principal.registrarCliente);
        principal.registrarCliente.setVisible(true);
        this.setVisible(false);
        cmbProducto.setSelectedIndex(-1);
    }//GEN-LAST:event_btnGenerarFacturaActionPerformed

    private void cmbTipoBebidaItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbTipoBebidaItemStateChanged
        // TODO add your handling code here:
        ComboBoxModel<String> tipoVaso = new DefaultComboBoxModel((new String[]{
            "Normal", "Grande"}));
        ComboBoxModel<String> tipoBotella = new DefaultComboBoxModel((new String[]{
            "Normal"}));

        String tipo = cmbTipoBebida.getSelectedItem().toString();

        if (tipo.equals("Vaso")) {
            cmbTamanio.setModel(tipoVaso);
            cmbTamanio.setVisible(true);
            cmbTamanio.setSelectedIndex(0);
        } else if (tipo.equals("Botella")) {
            cmbTamanio.setModel(tipoBotella);
            cmbTamanio.setVisible(true);
            cmbTamanio.setSelectedIndex(0);
        }
    }//GEN-LAST:event_cmbTipoBebidaItemStateChanged

    //Método para limpiar todos los campos
    public void limpiarCasillas() {
        cmbProducto.setSelectedIndex(-1);
        cmbTamanio.setVisible(false);
        cmbDescripcion.setVisible(false);
        cmbTipoBebida.setVisible(false);
        lblCantidad.setVisible(false);
        lblNumeroCantidad.setVisible(false);
        btnCantidadMas.setVisible(false);
        btnCantidadMenos.setVisible(false);
        btnAnadirProducto.setEnabled(false);
        btnGenerarFactura.setEnabled(false);
        lblValor.setText("");
        precioFinal = 0.0;
        tableProductos.setRowCount(0);
        
        this.imgProducto = new ImageIcon(getClass().getResource("/img/StarCines.jpg"));
        jLImagenProducto.setIcon(new ImageIcon(imgProducto.getImage().getScaledInstance(jLImagenProducto.getWidth(), jLImagenProducto.getHeight(), Image.SCALE_SMOOTH)));
    }

    void CentrarVentana(JInternalFrame frame) {
        Dimension dimension = this.getSize();
        Dimension Dframe = frame.getSize();
        frame.setLocation((dimension.width - Dframe.width) / 2, (dimension.height - Dframe.height) / 2);
        frame.show();
    }

    private void setModel() {
        String[] cabecera = {"Cantidad", "Producto", "Precio Unidad", "P.V.P."};
        tableProductos.setColumnIdentifiers(cabecera);
        jTableTotal.setModel(tableProductos);
    }

    private void setDatos(Producto p, String extra) {
        Double precioProductos;
        String producto = cmbProducto.getSelectedItem().toString();
        String tipoBebida = cmbTipoBebida.getSelectedItem().toString();
        Object[] datos = new Object[tableProductos.getColumnCount()];
        //tableProductos.setRowCount(0);
        datos[0] = lblNumeroCantidad.getText();
        if (producto.equals("Bebida")) {
            datos[1] = tipoBebida + " " + extra;
        } else {
            datos[1] = producto + " " + extra;
        }

        datos[2] = p.getPrecio();
        datos[3] = String.format("%.2f", Double.parseDouble(lblNumeroCantidad.getText()) * p.getPrecio());
        precioProductos = Double.parseDouble(lblNumeroCantidad.getText()) * p.getPrecio();

        tableProductos.addRow(datos);
        
        DetalleOrden nuevoDetalle = new DetalleOrden(
                Integer.parseInt(datos[0].toString()), 
                datos[1].toString(), 
                Double.parseDouble(datos[2].toString()), 
                Double.parseDouble(lblNumeroCantidad.getText()) * p.getPrecio());
        principal.detallesOrden.add(nuevoDetalle);
        
        jTableTotal.setModel(tableProductos);

        precioFinal += precioProductos;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAnadirProducto;
    private javax.swing.JButton btnCantidadMas;
    private javax.swing.JButton btnCantidadMenos;
    private javax.swing.JButton btnGenerarFactura;
    private javax.swing.JComboBox cmbDescripcion;
    private javax.swing.JComboBox<String> cmbProducto;
    private javax.swing.JComboBox<String> cmbTamanio;
    private javax.swing.JComboBox<String> cmbTipoBebida;
    private javax.swing.JLabel jLImagenProducto;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTableTotal;
    private javax.swing.JLabel lblCantidad;
    private javax.swing.JLabel lblDescripcion;
    private javax.swing.JLabel lblNumeroCantidad;
    private javax.swing.JLabel lblTamanio;
    private javax.swing.JLabel lblTipoBebida;
    private javax.swing.JLabel lblTipoProducto;
    private javax.swing.JLabel lblTituloCompra;
    private javax.swing.JLabel lblValor;
    // End of variables declaration//GEN-END:variables
}
