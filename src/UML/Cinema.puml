@startuml
'https://plantuml.com/class-diagram

abstract class RegistroVenta{
    -ordenes: DoublyLinkedList<Orden>
    -historialRegistro: HashMap<Integer, Factura>

    +getHistorialRegistro(): HashMap<Integer, Factura>
    +setHistorialRegistro(HashMap<Integer, Factura> historialRegistro)
    +addOrden(Orden orden)
    +getOrdenes(): DoublyLinkedList<Orden>
    +searchByName(String flag): Cliente
}

class Cliente {
    -nombres: String
    -apellidos: String
    -cédula: String
    -dirección: String
    -telf: String
    '+getNombres()
    '+setNombres()
    '+getApellidos()
    '+setApellidos()
    '+getCédula()
    '+setCédula()
    '+getDirección()
    '+setDirección()
    '+getTelf()
    '+setTelf()
}

class Factura{
    -nombreEmpresa: String
    -ruc: String
    -fecha: String
    -total: double
}

class Orden {
    -cliente: Cliente
    -productos: ArrayList<Producto>

    +añadirProducto(producto: Producto)
    +calcularTotal()
}

' Comprar Comida
abstract class Producto{
    #nombre: String
    #precio: double
    #tamaño: String

    +getNombre(): String
    +setNombre()
    +getTamaño(): String
    +setTamaño()
    +getPrecio(): double {abstract}
    +setPrecio()
}

abstract class Bebida{
    #sabor: String

    +getSabor()
    +setSabor()
}

abstract class Snack {

}

abstract class Extra{
    #snack: Snack
    #descripción: String
}

class Canguil{
    '+precio(): double
}

class Nacho{
    '+precio(): double
}

class HotDog{
    '+precio(): double
}

' Patrón de Diseño -> Decorator
Orden o- Producto: contiene

Factura "1"->"1" Orden: tiene

Producto <|-- Snack
Producto <|-- Bebida

Snack <|-- Extra
Snack <--o Extra
Snack <|-- Nacho
Snack <|-- HotDog
Snack <|-- Canguil
Extra <|-- CarneMolida
Extra <|-- Chile

Bebida <|-- Vaso
Bebida <|-- Botella

Orden "1"-->"1" Cliente: tiene
RegistroVenta "1"-->"1..*" Orden: guarda
RegistroVenta "1"-->"1..*" Factura: guarda

@enduml
