@startuml
'https://plantuml.com/class-diagram

abstract class RegistroVenta{
    -clientes: Cliente<DoublyLinkedList>
    -empleados: Empleado<HashMap>

    +eliminarCliente()
    +listarCliente()
    +addCliente(Cliente cliente)
    +getClientes(): <DoublyLinkedList<Cliente>>
    +searchByName(String flag): Cliente
}

class Cliente {
    -nombres: String
    -apellidos: String
    -cédula: String
    -dirección: String
    -telf: String

    '+getNombres()
    '+setNombres()
    '+getApellidos()
    '+setApellidos()
    '+getCédula()
    '+setCédula()
    '+getDirección()
    '+setDirección()
    '+getTelf()
    '+setTelf()
}

class Empleado{
    -id: int
    -nombres: String
    -apellidos: String
    -cédula: String
    -dirección: String
    -telf: String

    '+getId()
    '+setId()
    '+getNombres()
    '+setNombres()
    '+getApellidos()
    '+setApellidos()
    '+getCédula()
    '+setCédula()
    '+getDirección()
    '+setDirección()
    '+getTelf()
    '+setTelf()
}

class Facturación{
    -fecha: Date
    -ruc: String
    -total: double

    +pago(orden: Orden)
}

class Orden {
    -ordenID: int
    -cliente: Cliente
    -productos: Producto[]

    +añadirProducto(producto: Producto)
    +calcularTotal()
}

' Comprar Comida
abstract class Producto{
    #nombre: String
    #precio: double
    #tamaño: String

    +getNombre()
    +setNombre()
    +getTamaño()
    +setTamaño()
    +setPrecio()
    +getPrecio(): double {abstract}
}

abstract class Bebida{
    #sabor: String

    +getSabor()
    +setSabor()
}

abstract class Snack {

}

abstract class Extra{
    #snack: Snack
    #descripción: String
}

class Canguil{
    '+precio(): double
}

class Nacho{
    '+precio(): double
}

class HotDog{
    '+precio(): double
}

' Patrón de Diseño -> Decorator
Orden o- Producto: contiene

Facturación - Orden: tiene

Producto <|-- Snack
Producto <|-- Bebida

Snack <|-- Extra
Snack <--o Extra
Snack <|-- Nacho
Snack <|-- HotDog
Snack <|-- Canguil
Extra <|-- CarneMolida
Extra <|-- Chile

Bebida <|-- Vaso
Bebida <|-- Botella

Cliente -- RegistroVenta
Empleado -- RegistroVenta
RegistroVenta --> Orden: llena


@enduml